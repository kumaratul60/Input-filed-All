/*
For a flexed item you can you align - items to center content vertically
you can use justify content to center horizontally

*/

/*
m1 flex-box way-

.parent{
display:flex
justify-content:center
align-items:center
}
.child{
  //
}

m2 grid way-

.parent{
display:grid
place-items:center

}
.child{
  //
}

m3 margin property way-

.parent{
display:grid
}
.child{
  margin:auto
}

m4 Absolute property way-

.parent{

position: relative

}
.child{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%)
}

*/

.App {
  font-family: sans-serif;
  /* text-align: center; */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  background-color: chartreuse;
}
.app_input {
  height: 10px;
  width: 10px;
}
.app_input > input {
  caret-color: red;
  border-radius: 10px;
  border: none;
  outline: none;
  width: 10rem;
  height: 1.5rem;
  /* outline-color: green; */
}
.app_input > input:focus {
  background-color: yellow;
}
.app_input > input:hover {
  background-color: thistle;
  color: blue;
  transform: translateY(-7px);
  transition-duration: 0.5s;
}
.btn {
  padding: 10px 40px;
  margin: 10px 40px;
  border: none;
  outline: none;
  position: relative;
  z-index: 1;
  border-radius: 5px;
  background: linear-gradient(to right, #00ffa3, #dc1fff);
  cursor: pointer;
}
.btn::before {
  content: "";
  position: absolute;
  left: 1px;
  right: 1px;
  top: 1px;
  bottom: 1px;
  border-radius: 4px;
  background-color: white;
  z-index: -1;
  transition: 200ms;
}
.btn::after {
  content: attr(data);
  font-size: 16px;
  background: linear-gradient(to left, #00ffa3, #dc1fff);
  -webkit-background-clip: text;
  color: transparent;
  transition: 200ms;
}
.btn:hover::before {
  opacity: 50%;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.btn:hover::after {
  color: white;
}
